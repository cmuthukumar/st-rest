---
- hosts: localhost
  connection: local
  tasks:
    - name: Upload and Ensure SSH Key Exists in Digital Ocean account, Retries 3 times with delay of 5 seconds, if failure
      digital_ocean: >
       state=present
       command=ssh
       name=st-versalex
       ssh_pub_key={{ lookup('file','~/.ssh/id_rsa.pub')}}
       api_token="3722b41e3aab0efb96af5aa45dbd0c9a358988c8d0bde96ee46b5e82f4aecdb7"            
      register: uploadstatus
      retries: 3
      delay: 20
      until: uploadstatus|success
      
    - name: Set authorized key took from file
      authorized_key:
        user: root
        state: present
        key: "{{ lookup('file','~/.ssh/id_rsa.pub') }}"      

    - uri:
        url: https://api.digitalocean.com/v2/droplets
        method: POST
        body: '{"name":"server-test-1","size":"1gb","region":"nyc1","image":"centos-6-x64","ssh_keys":["{{uploadstatus.ssh_key.id}}"]}'
        body_format: json
        status_code: 202
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer 3722b41e3aab0efb96af5aa45dbd0c9a358988c8d0bde96ee46b5e82f4aecdb7"
      register: do_status
      
    - name: Print Droplet Create Details
      debug: msg="Droplet Res Det{{do_status.json.droplet.id}}"


    - name: Retrieve Droplet by an Id
      uri:
        url: "https://api.digitalocean.com/v2/droplets/{{do_status.json.droplet.id}}"
        method: GET
        status_code: 200
        headers:
          Content-Type: "application/json"
          Authorization: "Bearer 3722b41e3aab0efb96af5aa45dbd0c9a358988c8d0bde96ee46b5e82f4aecdb7"
      register: droplet_status

    - name: Print Droplet Retrive Details
      debug: msg="Droplet Rest Det {{droplet_status}}"


      
    # - name: Create  Droplet and Ensure it exists,Retries 3 times with delay of 5 seconds, if failure
      # digital_ocean: 
         # state: present
         # command: droplet
         # name: "server-test-1"
         # unique_name: yes
         # size_id: 1gb
         # region_id: nyc1
         # image_id: "centos-6-x64"
         # ssh_key_ids: "{{uploadstatus.ssh_key.id}}"
         # api_token: "{{do_token}}"
      # with_sequence: start=1 end=2 stride=1       
      # register: droplet_details
      # retries: 3
      # delay: 5  
      # until: droplet_details|success

    # - name: Accept ssh fingerprints                                         
      # shell: ssh-keyscan -H {{ item.droplet.ip_address }} >> ~/.ssh/known_hosts          
      # with_items: '{{ droplet_details.results }}'

    # - name: List Known Hosts file
      # shell: cat ~/.ssh/known_hosts 
      # register: kn_hst
  
    # - name: Print known hosts
      # debug: msg="Knwn Hosts {{kn_hst}}"
      
    - name: "Add IP's of Machines Created in Digital Ocean to Groups"
      add_host: 
        name: "{{item.droplet.name}} ansible_ssh_host={{item.droplet.ip_address}}  appl={{outer_item.name}} subtype={{swtype}}"
        hostname: "{{item.droplet.name}}"
        type: "{{mac_type}}"       
        ansible_host: "{{item.droplet.ip_address}}"
        groups: "{{mac_type}}-{{swtype}}"
        # ansible_ssh_private_key_file: '/root/.ssh/id_rsa'
        # ansible_ssh_common_args: '-o PubkeyAuthentication=yes'
        # ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        # ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null'
      with_items: "{{droplet_details.results}}"
      
    - name: "Add IPs of Machines Created in Digital Ocean to Groups at Type Level"
      add_host:
        name: "{{item.droplet.name}} ansible_ssh_host={{item.droplet.ip_address}} appl={{outer_item.name}} subtype={{swtype}}"
        hostname: "{{item.droplet.name}}"
        type: "{{mac_type}}"        
        ansible_host: "{{item.droplet.ip_address}}"
        groups: "{{mac_type}}"
        # ansible_ssh_private_key_file: '/root/.ssh/id_rsa'
        # ansible_ssh_common_args: '-o PubkeyAuthentication=yes'
        # ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        # ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null'
      with_items: "{{droplet_details.results}}"

    - name: "Add IP's of Machines Created in Digital Ocean to Groups Srvers"
      add_host: 
        name: "{{item.droplet.name}} ansible_ssh_host={{item.droplet.ip_address}}  appl={{outer_item.name}} subtype={{swtype}}"
        hostname: "{{item.droplet.name}}"
        type: "{{mac_type}}"       
        ansible_host: "{{item.droplet.ip_address}}"
        groups: "{{swtype}}"
        # ansible_ssh_private_key_file: '/root/.ssh/id_rsa'
        # ansible_ssh_common_args: '-o PubkeyAuthentication=yes'
        # ansible_ssh_common_args: '-o StrictHostKeyChecking=no'
        # ansible_ssh_common_a      rgs: '-o UserKnownHostsFile=/dev/null'
      with_items: "{{droplet_details.results}}"
    
    - name: Wait for SSH to come up
      wait_for: host="{{item.droplet.ip_address}}" port=22 delay=5 timeout=320 state=started
      with_items: "{{droplet_details.results}}"