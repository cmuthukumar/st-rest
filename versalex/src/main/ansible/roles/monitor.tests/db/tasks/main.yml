---
# tasks file for jmeter
- block:
    # - name: Validate DB Details for Transactions
      # db_validation:
            # db_ip: "{{ansible_ssh_host}}"
            # db_port: "{{item.value.port}}"
            # db_username: "{{item.value.username}}"
            # db_password: "{{item.value.password}}"
            # dbname: "{{item.value.dbname}}"
            # as2_expected_txns: "{{(as2_filespermin|int*as2_totalmins|int) | default(0)}}"
            # ftp_expected_txns: "{{(ftp_filespermin|int*ftp_totalmins|int)| default(0)}}"
            # sshftp_expected_txns: "{{(sshftp_filespermin|int*sshftp_totalmins|int)| default(0)}}"
            # wait_time: 300
      # when: "'db' in item.value.type"
      # with_dict: "{{ integrations | default({}) }}"
      # async: "{{((as2_filespermin|int * ftp_totalmins |int * sshftp_filespermin|int)* 60)}}"
      # poll: 10
      # register: db_results

    - name: Download DB artifact using Maven Artifact
      maven_artifact:
        repository_url: "{{item.value.repository_url}}"
        group_id: "{{item.value.maven_groupid}}"
        artifact_id: "{{item.value.maven_artifactid}}"
        version: "{{item.value.maven_version}}"
        dest: "{{playbook_dir}}/library/{{item.key}}.jar"  
      when: ( (item.value.name is defined)  and (item.value.name == item.key) )
      with_dict: "{{ integrations | default({}) }}"
      register: jar_download
      ignore_errors: yes
      register: jar_download
      retries: 2
      delay: 5  
      until: jar_download|success
      delegate_to: 127.0.0.1
  
    - name: Print JDBC Path
      debug: msg="jdbc path url -{{item.value.jdbc_string}}{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:{{item.value.port}}/{{item.value.dbname}}"
      with_dict: "{{ integrations | default({}) }}"
      delegate_to: 127.0.0.1
      
    - name: Validate DB Details for Transactions using JDBC
      query_jdbc:
        db_ip: "{{ansible_ssh_host}}"
        db_port: "{{item.value.port}}"
        driver_str: "{{item.value.driver_str}}"
        jdbc_string: "{{item.value.jdbc_string}}{{hostvars[inventory_hostname]['ansible_default_ipv4']['address']}}:{{item.value.port}}/{{item.value.dbname}}"
        jar_path: "{{playbook_dir}}/library/{{item.key}}.jar"
        db_username: "{{item.value.username}}"
        db_password: "{{item.value.password}}"
        dbname: "{{item.value.dbname}}"
        as2_expected_txns: "{{((as2_filespermin|default(0)|int)*(as2_totalmins|default(0)|int)) | default(0)}}"
        ftp_expected_txns: "{{((ftp_filespermin|default(0)|int)*(ftp_totalmins|default(0)|int))| default(0)}}"
        sshftp_expected_txns: "{{((sshftp_filespermin|default(0)|int)*(sshftp_totalmins|default(0)|int))| default(0)}}"
        wait_time: 30
      when: ( (item.value.name is defined)  and (item.value.name == item.key) )
      with_dict: "{{ integrations | default({}) }}"
      async: "{{((as2_filespermin|default(0)|int * ftp_totalmins |default(0)|int * sshftp_filespermin|default(0)|int)* 60)}}"
      poll: 10
      register: query_jdbc
      delegate_to: 127.0.0.1
      
    - name: Print DB Results
      debug: var=query_jdbc
      delegate_to: 127.0.0.1
- rescue:
    - fail: msg="Monitor DB Role Failed"