---
# tasks file for install.apps

# - name: Install EPEL Repo.
  # yum:
    # name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    # state: present

# - name: Import EPEL GPG key.
  # rpm_key:
    # key: /etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    # state: present
    
- name: Install EPEL Repository
  yum:
    name: epel-release
    state: present
    
- name: Install Unzip package for running bin file in CentOS
  yum: name=unzip state=present
  register: unzip_status
  retries: 3
  delay: 2
  until: unzip_status|success         
# - name: Install libxslt-devel package for running bin file in CentOS
  # yum: name="{{item}}" state=present
  # with_items:
        # - libxml2 
        # - libxml2-devel
        # - libxslt
        # - libxslt-devel
        # - python-devel
        # - gcc
        # - gcc-c++
        # - kernel-devel
        # - python-pip
        
# - name: Install python-devel package for running bin file in CentOS
  # yum: name=python-devel state=present
  
- name: Install Development tools package
  yum: name="@Development tools" state=present
   
# - name: Checking Python 2.7 available or not in Linux Systems
  # shell: python --version
  # register: py_version
  
# - debug: msg="Pre Tasks Completed::{{py_version}}"  

# - name: "Install python2.7 With Deps"
  # include_tasks: "install_centos_py27.yml"
  # when: ansible_distribution_version | int >= 9

- name: Install Pip and lxml Deps using YUM
  yum: name="{{item}}" state=present 
  with_items:
    - libxml2 
    - libxml2-devel
    - libxslt
    - libxslt-devel
    - python-devel
    - gcc
    - gcc-c++
    - kernel-devel
    - python-pip
  register: lxm_deps
  retries: 3
  delay: 2
  until: lxm_deps|success
  
- name: Install lxml using pip
  pip: 
    name: lxml
    version: 3.2.1
  environment:
    PATH: "/usr/bin/python2.7:{{ ansible_env.PATH }}"
  register: lxml_status
  retries: 3
  delay: 2
  until: lxml_status|success

- name: Install Jinja2 using pip
  pip: 
    name: jinja2
    version: latest
  register: jinja_status
  retries: 3
  delay: 2
  until: jinja_status|success
  
- name: Install RNG-tools required for Random Number Generation using YUM
  yum: name=rng-tools state=present
  register: rng
  retries: 3
  delay: 2
  until: rng|success
  
- name: Run RNGD Service
  service: name=rngd state=started
  register: rngd_status
  retries: 3
  delay: 3
  until: rngd_status|success  
  
- name: Update /etc/hosts from inventory
  lineinfile: dest=/etc/hosts regexp='.*{{inventory_hostname}}$' line="{{ansible_default_ipv4.address}} {{inventory_hostname}}" state=present
  register: etc_status
  retries: 3
  delay: 2
  until: etc_status|success  
  # with_items: "{{groups.all}}"
