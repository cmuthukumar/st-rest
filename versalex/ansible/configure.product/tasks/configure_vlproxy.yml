---
   - name: Copy VLProxy File to Remote Install Location
     copy: src="{{playbook_dir}}/results/vlproxy.txt" dest="{{versalex.install_location}}"
     
   - name: Configure VLProxy with Serial Numbers File
     shell: "{{item}}"
     args:
      chdir: "{{versalex.install_location}}"
     with_items:
       - ./{{versalex.dname}}c -p < vlproxy.txt
     # when: versalex.name == 'VLProxy'
     
   - name: Copy User VLProxy Config File to Remote Install Location
     copy: src="{{playbook_dir}}/{{role_path |basename}}/files/" dest="{{versalex.install_location}}"
     # when: versalex.name == 'VLProxy'
 #    with_dict: "{{configure_apps['vlproxies']}}"     
   - name: Configure VLProxy with User File Configs
     shell: "./{{versalex.dname}}c -p < {{item |basename}}"
     args:
      chdir: "{{versalex.install_location}}"
     with_fileglob: "{{playbook_dir}}/{{role_path |basename}}/files/*.txt"
     # with_items: "{{groups[versalex.groupname] | default({})}}"
     # when: versalex.name == 'VLProxy'
     register: vlproxyconf
     
   # - name: Start VLProxy Product Daemon   
     # shell: "{{item}}"
     # args:
      # chdir: "{{versalex.install_location}}"
     # with_items:
      # - ./{{versalex.dname}}d start
     # # when: versalex.name == 'VLProxy'
     # register: startvexstatus
     
   # - name: Wait for port 8080 to get Started
     # wait_for: port=8080 delay=10 state=started
     # when: versalex.name == 'VLProxy'
     
   # - name: "Edit VersalexC Lax file"
     # include: configure_heap_jmx.yml
   # - name: Creates Role Based Location Directory
     # file: path="{{playbook_dir}}/results/{{role_path |basename}}/{{inventory_hostname}}/" state=directory
     # delegate_to: 127.0.0.1    
   # - name: Capture SerialNumber and Write Node File  
     # shell: "./{{versalex.name}}c -s license |grep 'Serial Number' | awk -F '=' '{print $2}' "
     # args:
      # chdir: "{{versalex.install_location}}"
     # when: versalex.name != "VLProxy"
     # register: serifile
   # - name: Print Serial No Details
     # debug: msg="Serial No Details {{serifile}}"
     # when: versalex.name != "VLProxy"
   # - name: Convert and Store Versalex Product Details to YAML file in Results Folder
     # copy: content="{{ serifile  | to_nice_yaml( width=50, explicit_start=True, explicit_end=True)}}" dest="{{playbook_dir}}/results/{{role_path |basename}}/{{inventory_hostname}}/serialno.yml"
     # delegate_to: 127.0.0.1
   # - name: Serial Numbers Included
     # include_vars: "{{playbook_dir}}/results/{{role_path |basename}}/{{inventory_hostname}}/serialno.yml"
     # when: versalex.name !='VLProxy'
     # ignore_errors: true
     # delegate_to: 127.0.0.1
   # - name: Print Serial Number
     # debug: msg="Serial No:{{stdout}}"
     # when: versalex.name !='VLProxy'
     # delegate_to: 127.0.0.1     