---
- hosts: localhost  
  vars_files:
     - "{{machine_type}}.yml"
  roles:
    - {role: create.topology, machine_type: "{{machine_type}}" }
      # - "tpnodes.yml"
  # roles:
     # - {role: create.topology }
     # - {role: setup_vars } 
# - hosts: localhost
  # vars_files:
     # - "{{user_file}}"    
     # - {role: setup_vars }             
  # tasks:
    # - name: Remove Hosts File if exists
      # file:
        # path: "{{playbook_dir}}/{{machine_type}}"
        # state: absent        
    # - name: Include Create Machines Role
      # include_role:
        # name: "create.topology"
      # vars:
        # mach_type: "{{machine_type}}"      
      # with_dict: "{{ hardware |default({}) }}"
      # loop_control:
         # loop_var: group_item

    # - name: Refresh inventory of hosts
      # meta: refresh_inventory      
    # - name: Find TPNodes Versalex Count
      # set_fact:
        # tp_cnt: "{{  groups['tpnodes-versalex'] | length }}"
        
    # - name: "TP Node Count"
      # debug: msg="TP Count is {{tp_cnt}} "
     # - name: Iterate Sequences
       # template: src="test_dataset.j2" dest="/home/SystemTestNew/{{item.1}}.yml"
       # with_indexed_items: "{{ groups['tpnodes-versalex'] }}"
       # delegate_to: 127.0.0.1
      

    # - {role: create.topology }
     # - {role: setup_vars }
  # post_tasks:
    # - name: Print Dictionary
      # include: setup_hostvars.yml
      # with_subelements:
         # - "{{systestnodes}}"
         # - configs
         # - skip_missing: true
      # loop_control:
         # loop_var: outer_item
      # delegate_to: 127.0.0.1   
    # - name: Iterate DBNodes
      # debug: msg="hostvars[item]"
      # with_dict: groups['servers-dbnodes']
# - hosts: all
  # strategy: free
  # gather_facts: no
  # pre_tasks:
    # - block:  
       # - name: Checking Python 2.7 available or not in Linux Systems
         # raw: python --version
         # register: py_version
       # - debug: msg="Pre Tasks Completed::{{py_version}}"
       # - name: Install Python Headers and Libs required for ansible core modules
         # include: "{{playbook_dir}}/install.product/tasks/install_pythonlibs.yml"
      # rescue:
       # - debug: msg="Failed to check/install python 2.7 version..."
      # always:      
       # - name: Gather Facts for Remote Hosts now
         # setup:

# ################################################Create Host Variables for further playbooks################################################
# - hosts: "{{pre_groups}}"
  # strategy: free
  # tasks:
    # - name: "Create Host Vars File for Each Node"
      # lineinfile:
        # create: yes
        # dest: "{{playbook_dir}}/host_vars/{{ansible_hostname}}.yml"
        # line: "{{pre_configs}}:"
        # state: present
        # insertafter: EOF
      # when: item.0.type == "{{pre_groups}}"
      # with_subelements:
        # - "{{systestnodes}}"
        # - "{{pre_configs}}"
        # - skip_missing: true
      # delegate_to: 127.0.0.1
      # register: install_non_docker_status
      # retries: 3
      # delay: 5  
      # until: install_non_docker_status|success
      
    # - name: "Create Host Vars File for Each Node"
      # lineinfile:
        # create: yes
        # dest: "{{playbook_dir}}/host_vars/{{ansible_hostname}}.yml"
        # line: "{{ item[1]|to_nice_yaml( width=50, explicit_start=True, explicit_end=True) }}"
        # state: present
        # insertafter: EOF
      # when: item.0.type == "{{pre_groups}}"
      # with_subelements:
        # - "{{systestnodes}}"
        # - "{{pre_configs}}"
        # - skip_missing: true
      # delegate_to: 127.0.0.1
      # register: install_non_docker_status
      # retries: 3
      # delay: 5  
      # until: install_non_docker_status|success
      
# - hosts: "{{install_product}}"
  # pre_tasks:
    # - name: Create Host Vars
      # lineinfile:
        # create: yes
        # dest: "{{playbook_dir}}/results/test_item.yml"
        # line: "{{nfacts[1] |to_nice_yaml}}"
        # state: present
        # insertafter: EOF
      # delegate_to: 127.0.0.1
  # strategy: free         
  # vars_files:
    # - systesttest.yml
  # roles:
    # - {role: install.product, install_product_confs: "{{install_product_configs}}", install_groups: "{{install_product}}" }
  # tasks:
    # - name: Print Host Vars
      # debug: msg="Ansible SSH Host Name {{ansible_hostname}}"

# # - hosts: "{{install_integrations}}"
  # # strategy: free         
  # # vars_files:
    # # - systesttest.yml
  # # roles:
    # # - {role: install.integrations, thirdparty_confs: "{{install_integrations_configs}}", install_groups: "{{install_integrations}}" }
  # # tasks:
    # # - name: Print Host Vars
      # # debug: msg="Ansible SSH Host Name {{ansible_hostname}}"

# - hosts: "{{configure_versalex}}"
  # strategy: free         
  # vars_files:
    # - systesttest.yml
  # roles:
    # - {role: configure.versalex, versalex_confs: "{{configure_versalex_configs}}", install_groups: "{{configure_versalex}}" }
  # tasks:
    # - name: Print Host Vars
      # debug: msg="Ansible SSH Host Name {{ansible_hostname}}"
